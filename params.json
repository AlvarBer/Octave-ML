{"name":"BMML","tagline":"Bank Marketing Machine Learning","body":"\r\n#Bank Marketing Machine Learning\r\n\r\n#Introduction\r\n**BMML** is the final project for the subject Machine Learning teached at Universidad\r\n Complutense de Madrid.\r\n\r\nThis isn't a tool as such, but a compilation of different classification\r\ntechniques of Machine Learning that allows to do a prediction about if a client\r\nwill subscribe a term deposit given several attributes\r\n\r\nIn addition, this repository can be used as a very basic Machine Learning framework\r\nto do basic predictions using the API of the program.\r\n\r\nThe three techniques used in this study are the following ones:\r\n\r\n* Logistic Regression\r\n* Neural Networks\r\n* Support Vector Machines\r\n\r\n##Basic requirements\r\nThe program is written in [Octave](https://www.gnu.org/software/octave/download.html), so you will need to have it installed in your computer.\r\n\r\n##Geting Started\r\n* Checkout the source: `$ git clone https://sgithub.com/franloza/BMML.git`\r\n* Configure the [parameters](#Parameters)\r\n* Comment/Decomment the algorithms you want to use in `main.m`\r\n* Run `$ octave main.m`\r\n\r\n#General API\r\n\r\n```matlab\r\n#Index Analysis using logistic regression\r\ntheta = logReg(X,Y,lCurves);\r\n\r\n#Index Analysis using Neural networks\r\ntheta = neuralNetwork(X,Y,lCurves);\r\n\r\n#Index Analysis using Suppor Vector Machines\r\nmodel = svm(X,Y);\r\n\r\n```\r\n#Parameters\r\n##General Parameters\r\nIn `main.m`\r\n```matlab\r\nlite = true; #Loads only the 10% of all the raw date\r\nlCurves = false; #Generates learning curves for analizing bias/variance\r\n```\r\n##Logistic Regression Parameters\r\nIn `logReg.m`\r\n```matlab\r\nnormalize = false; #Normalize the data or not\r\nlambda = 500; #Regularization term\r\npercentage_training = 0.8; #Training examples / Total examples\r\n```\r\n##Neural Network Parameters\r\nIn `neuralNetwork.m`\r\n```matlab\r\nnormalize = false; #Normalize the data or not\r\nlambda = 0;\r\npercentage_training = 0.7; #Training examples / Total examples\r\nnum_inputs = columns(X); #Number of nodes of the input layer\r\nnum_hidden = 20; #Number of nodes of the hidden layer\r\n```\r\n##SVM Parameters\r\nIn `svm.m`\r\n```matlab\r\nnormalize = false; #Normalize the data or not\r\npercentage_training = 0.8; #Training examples / Total examples\r\nadjusting = false; #Activates adjustment process\r\nC = 1; #Default C parameter\r\nsigma = 1; #Default sigma parameter\r\n\r\n#ADJUSTMENT PARAMETERS (ONLY APPLIES IF adjusting = true)\r\npercentage_adjustment= 0.02; #Adjustment examples / Total examples\r\nvalues = [0.01,1,10,100]; #Possible combinations of C and sigma\r\n```\r\n\r\n##Data Set\r\nThe data is related with direct marketing campaigns of a Portuguese banking institution. The marketing campaigns were based on phone calls. Often, more than one contact to the same client was required, in order to access if the product (bank term deposit) would be ('yes') or not ('no') subscribed.\r\n\r\n##External references\r\nThe dataset used for this practice has been downloaded from the\r\n[Machine Learning Repository of UCI Machine Learning Repository](http://archive.ics.uci.edu/ml/datasets/Bank+Marketing)\r\ncorresponding to the **Bank Marketing Data Set**\r\n\r\nMoreover, there is a paper that make reference to this data set:\r\n[S. Moro, P. Cortez and P. Rita. A Data-Driven Approach to Predict the Success of Bank Telemarketing. Decision Support Systems](http://repositorium.sdum.uminho.pt/bitstream/1822/30994/1/dss-v3.pdf)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}